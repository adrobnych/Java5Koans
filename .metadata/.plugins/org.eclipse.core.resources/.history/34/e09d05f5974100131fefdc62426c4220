package com.droidbrew.javakoans.eagkoans;

import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import static com.droidbrew.javakoans.eagkoans.base.Koan.___;
import static org.junit.Assert.assertEquals;
import org.junit.Test;

@Retention(RetentionPolicy.RUNTIME)
@interface Auto {
	int numberOfWheels() default 4;
	String slangName() default "Can";
	String[] visualPartsNames() default {"engine", ""};
}

class Car{
	int numberOfWheels;

	public Car() {
		Auto autoAnnotation = this.getClass().getAnnotation(Auto.class);
		if(autoAnnotation != null)
			this.numberOfWheels = autoAnnotation.numberOfWheels();
		else
			this.numberOfWheels = 0;
	}
	
	public Car(int numberOfWheels) {
		this.numberOfWheels = numberOfWheels;
	}

	public int getNumberOfWheels() {
		return numberOfWheels;
	}
	
}



public class C_AboutCustomAnnotations {
	
	@Auto               // try to remove this annotation and explain what was happen
	class Vaz2101 extends Car{
	}

	@Test
	public void a_____annotation_can_be_applied_by_reflection() {
		Vaz2101 krasniyZhigul = new Vaz2101();
		assertEquals(___, krasniyZhigul.getNumberOfWheels());
	}

}
