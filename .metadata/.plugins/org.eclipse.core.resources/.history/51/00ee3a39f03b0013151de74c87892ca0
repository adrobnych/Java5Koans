package com.droidbrew.javakoans.eagkoans;

import static org.junit.Assert.*;
import static com.droidbrew.javakoans.eagkoans.base.Koan.*;

import org.junit.Test;

public class A_AboutEnumsBasics {

	enum Colors {
		Red, Blue, Green, Yellow // what happens if you add a ; here?
		// What happens if you type Red() instead?
	}
	
	@Test
	public void a_____Enum_is_convenient_set_of_constants() {
		Colors blue = Colors.Blue;
		assertEquals(___, blue == Colors.Blue);
		assertEquals(___, blue == Colors.Red);
		assertEquals(___, blue instanceof Colors);
	}
	
	@Test
	public void b_____you_can_get_all_constants_as_an_array() {
		Colors[] colorArray = Colors.values();
		assertEquals(___, colorArray[2]);
	}
	
	enum SkatSuits {
		Clubs(12), Spades(11), Hearts(10), Diamonds(9);
		SkatSuits(int v) { value = v; }
		private int value;
	}
	
	@Test
	public void c_____Enum_constants_are_objects_with_their_properties() {
		// value is private but we still can access it. Why?
		// Try moving the enum outside the AboutEnum class... What do you expect?
		// What happens?
		assertEquals(___, SkatSuits.Clubs.value > SkatSuits.Spades.value);
	}
	
	enum OpticalMedia {
		CD(650), DVD(4300), BluRay(50000);
		OpticalMedia(int c) {
			capacityInMegaBytes = c;
		}
		int capacityInMegaBytes;
		int getCoolnessFactor() {
			return (capacityInMegaBytes - 1000) * 10;
		}
	}
	
	@Test
	public void d_____Enum_constants_are_objects_with_their_methods() {
		assertEquals(___, OpticalMedia.CD.getCoolnessFactor());
		assertEquals(___, OpticalMedia.BluRay.getCoolnessFactor());
	}
	
	@Test
	public void e_____Enum_constants_are_ordered() {
		//assertEquals(___, OpticalMedia.CD.ordinal());
		assertEquals(___, OpticalMedia.BluRay.ordinal());
	}

}
